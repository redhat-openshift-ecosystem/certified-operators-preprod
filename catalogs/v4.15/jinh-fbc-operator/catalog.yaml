---
defaultChannel: stable-v1.0
name: jinh-fbc-operator
schema: olm.package
---
entries:
- name: jinh-fbc-operator.1.0.0
name: candidate-v1
package: jinh-fbc-operator
schema: olm.channel
---
entries:
- name: jinh-fbc-operator.1.0.0
name: candidate-v1.0
package: jinh-fbc-operator
schema: olm.channel
---
entries:
- name: jinh-fbc-operator.1.0.0
- name: jinh-fbc-operator.1.0.1
  skips:
  - jinh-fbc-operator.1.0.0
name: stable-v1
package: jinh-fbc-operator
schema: olm.channel
---
entries:
- name: jinh-fbc-operator.1.0.0
- name: jinh-fbc-operator.1.0.1
  skips:
  - jinh-fbc-operator.1.0.0
name: stable-v1.0
package: jinh-fbc-operator
schema: olm.channel
---
image: registry.connect.stage.redhat.com/jinhli-test/jinhli-sep:1.0.0
name: jinh-fbc-operator.1.0.0
package: jinh-fbc-operator
properties:
- type: olm.gvk
  value:
    group: cache.quay.io
    kind: Memcached
    version: v1alpha1
- type: olm.package
  value:
    packageName: jinh-fbc-operator
    version: 1.0.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtZW1jYWNoZWRzLmNhY2hlLnF1YXkuaW8ifSwic3BlYyI6eyJncm91cCI6ImNhY2hlLnF1YXkuaW8iLCJuYW1lcyI6eyJraW5kIjoiTWVtY2FjaGVkIiwibGlzdEtpbmQiOiJNZW1jYWNoZWRMaXN0IiwicGx1cmFsIjoibWVtY2FjaGVkcyIsInNpbmd1bGFyIjoibWVtY2FjaGVkIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiTWVtY2FjaGVkIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBtZW1jYWNoZWRzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIE1lbWNhY2hlZCIsInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgTWVtY2FjaGVkIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoia3ViZS1yYmFjLXByb3h5IiwiYXBwLmt1YmVybmV0ZXMuaW8vY3JlYXRlZC1ieSI6ImZiYy10ZXN0LW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJtZXRyaWNzLXJlYWRlciIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiY2x1c3RlcnJvbGUiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoiZmJjLXRlc3Qtb3BlcmF0b3IifSwibmFtZSI6ImZiYy10ZXN0LW9wZXJhdG9yLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoia3ViZS1yYmFjLXByb3h5IiwiYXBwLmt1YmVybmV0ZXMuaW8vY3JlYXRlZC1ieSI6ImZiYy10ZXN0LW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJjb250cm9sbGVyLW1hbmFnZXItbWV0cmljcy1zZXJ2aWNlIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6Imt1c3RvbWl6ZSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJzZXJ2aWNlIiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6ImZiYy10ZXN0LW9wZXJhdG9yIiwiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoiZmJjLXRlc3Qtb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc2VydmljZSJ9LCJzcGVjIjp7InBvcnRzIjpbeyJuYW1lIjoiaHR0cHMiLCJwb3J0Ijo4NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOiJodHRwcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
relatedImages:
- image: gcr.io/kubebuilder/kube-rbac-proxy@sha256:d4883d7c622683b3319b5e6b3a7edfbf2594c18060131a8bf64504805f875522
  name: kube-rbac-proxy
- image: quay.io/rhn_apal/memcached-operator@sha256:ebbfedd514944e1a2a140f785f900d482eecbfff2e3d67bf76f6ee54569a49bc
  name: memcached-operator
- image: registry.connect.stage.redhat.com/jinhli-test/jinhli-sep:1.0.0
  name: ""
schema: olm.bundle
---
image: registry.connect.stage.redhat.com/jinhli-test/jinhli-sep:1.0.1
name: jinh-fbc-operator.1.0.1
package: jinh-fbc-operator
properties:
- type: olm.gvk
  value:
    group: cache.quay.io
    kind: Memcached
    version: v1alpha1
- type: olm.package
  value:
    packageName: jinh-fbc-operator
    version: 1.0.1
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtZW1jYWNoZWRzLmNhY2hlLnF1YXkuaW8ifSwic3BlYyI6eyJncm91cCI6ImNhY2hlLnF1YXkuaW8iLCJuYW1lcyI6eyJraW5kIjoiTWVtY2FjaGVkIiwibGlzdEtpbmQiOiJNZW1jYWNoZWRMaXN0IiwicGx1cmFsIjoibWVtY2FjaGVkcyIsInNpbmd1bGFyIjoibWVtY2FjaGVkIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiTWVtY2FjaGVkIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBtZW1jYWNoZWRzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIE1lbWNhY2hlZCIsInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgTWVtY2FjaGVkIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW10iLCJjYXBhYmlsaXRpZXMiOiJCYXNpYyBJbnN0YWxsIiwiY3JlYXRlZEF0IjoiMjAyMy0wNS0wOFQwNToxNTo1MFoiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL2NzaSI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9kaXNjb25uZWN0ZWQiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vZmlwcy1jb21wbGlhbnQiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vcHJveHktYXdhcmUiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdGxzLXByb2ZpbGVzIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3Rva2VuLWF1dGgtYXdzIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3Rva2VuLWF1dGgtYXp1cmUiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdG9rZW4tYXV0aC1nY3AiOiJmYWxzZSIsIm9wZXJhdG9ycy5vcGVyYXRvcmZyYW1ld29yay5pby9idWlsZGVyIjoib3BlcmF0b3Itc2RrLXYxLjI4LjEiLCJvcGVyYXRvcnMub3BlcmF0b3JmcmFtZXdvcmsuaW8vcHJvamVjdF9sYXlvdXQiOiJhbnNpYmxlLnNkay5vcGVyYXRvcmZyYW1ld29yay5pby92MSJ9LCJuYW1lIjoiamluaC1mYmMtb3BlcmF0b3IuMS4wLjEiLCJuYW1lc3BhY2UiOiJwbGFjZWhvbGRlciJ9LCJzcGVjIjp7ImFwaXNlcnZpY2VkZWZpbml0aW9ucyI6e30sImN1c3RvbXJlc291cmNlZGVmaW5pdGlvbnMiOnsib3duZWQiOlt7ImtpbmQiOiJNZW1jYWNoZWQiLCJuYW1lIjoibWVtY2FjaGVkcy5jYWNoZS5xdWF5LmlvIiwidmVyc2lvbiI6InYxYWxwaGExIn1dfSwiZGVzY3JpcHRpb24iOiJNZW1jYWNoZWQgb3BlcmF0b3IiLCJkaXNwbGF5TmFtZSI6Im1lbWNhY2hlZCIsImljb24iOlt7ImJhc2U2NGRhdGEiOiJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBTWdBQUFESUNBWUFBQUN0V0s2ZUFBQWwwMGxFUVZSNG5PeWREWGhUNWQzL3YzbHIwaVJ0MnFhMDZRdFlTZ3BGUUFxeUl2dUQ0cWI3ZzF6UHMyZW8yNlBJTFBMWFBkT2hteTl6d3luaUpqN1BuczFOMmVZMkx3VkYzWlNKUHM5a1pjcVVTUlhib1pTQmdEYlFVdHNtbERSTjByeS8vcTg3VGJCdlNjN0pPU2ZucEQyZjYrcEZ4ZVNjSHlmM045LzdkNy84Ym5rMEdvVUlleHl4ZTJRV1g3QWNRSlhKNWEvdWNQa3F5ZThBU3R2dEhyM0ZGOUlCS0lyLzVBUElBNkFZOFNjaENDQXc0azh2QUR2NU1hamtqb1lpOVFBQUs0RGVPcTJxejZoVjlwRGZEU3JGdVVWRjZqRFBqMkJTSVJFRndvenRwdjRDQUplMTJ0ekwybXp1WlFCV0FORHdGSTRid01IR0VzMmhwU1dhUXdBKzJHUXNHK0lwbGttQktCQWFORnNjNVNhWGYzR0h5N2ZJNVBLVG44VUFhdm1PS3cxbmpGcmxSMGF0OGtpZFZuV0UvTDdhb0R2SGQxQzVnaWlRTkRSYkhQb1h1MjFyMjJ6dUd3R3M1RHNlbGpqUVdLSjVhZDJNa2oyckRib0J2b01STXFKQXhuREU3dEcwV0YyWEg3UU9YZFZ1OTVMdTBzSjRmakFaSWZuTjBZYWkvSU1yU2d2Mkx5L1Z2cnVvU08zbU95Z2hJUW9rem5aVC83enRwdjdiQWF3RG9PTTdIcDV3QUhoeGs3SHNONXVNWlIvekhZd1FtTklDYWJZNHFwc3Rqclg3TE01ckFTd0hJT1U3Sm9FUUFkQ3l5bEQ0Nm1xRGpuVERldmdPaUMrbXBFQzJtL29YYkRmMVB3Qmc3WWloVlpHSkNRTFlzOGxZOXVnbVk5a3h2b1BKTmxOR0lHWmZNRzlIbC9YR25WMERUWEcza1BFZFU0NFJKcTdTVktQZnVhR205S1VLbFNMQWQwRFpZTklMWkVlWGRkN3Vuc0VOSnBmL0JnQ1ZmTWN6U2VnemFwVi91TDY2ZU1lR210SkpuYXRNV29FMFd4eWxkN1YvdGczQUxhSmJjQVp4bFdlZmFKaStlYlZCWitVN0dDNllkQUxaMFdXZHRidG44TnNtbC85bUFLVjh4ek5Gc0JxMXl1ZXVyeTUrYWtOTjZXbStnMkdUU1NPUURwZFBzZldFK2Z0dE52ZVBBS2o0am1lSzRtc3MwZnhreThVVlA2M1Rxb0o4QjhNR2swSWcyMDZacjlyWk5mQUxBUFA1amtVa3h2R21HdjMzTnRkWDdPYzdFS2JrdEVDYUxRNzlYZTJmUFEzZ2EzekhJaklocnozUk1QM1dYRjdPa3BNQ01mdUN5c2RPbVcvZVozRStBR0FHMy9HSXBLUjdsYUh3MFIvV1Z6eFhvVkw0K1E2R0xqa2xFTE12S1AxVHorQzEyMDM5V3dITTVUc2VFVnFjM0dRczIzSmRkZkdyRlNwRmhPOWdxSkl6QW1tMXVhVmJUL1R0TkxuODYvbU9SU1J6akZybHJpMFhWell0TGRIa2hFaHlRaURiVHBtdjNOazE4Q3NBRi9NZGl3Z3JuR2lxMFg5bmMzM0ZPM3dIa2c3QkMrVE85dTdyOTFtY2Z4QW4reVlkNFZXR3dodWViSml4bSs5QVVpSFkxYXRIN0I3ZE5TMGR2OXhuY2I0b2ltTlNJaU9mTGZtTXlXZk5kekRKRUtTRHROcmMydlZ0blc4Q1dNWjNMQ0paNGRDdXhwbGZXVnFpY2ZFZHlGZ0VKNUJ0cDh4ZjJkazE4QXlBYXI1akVja3FQVTAxK28yYjZ5dmU1RHVRa1FoS0lEZTFkWDY5emViZU5ZbTN1SXFrSnRCWW9sbi9RdVBNVi9nT0pJRWdjaEN6TDBpUzhTMXROdmNmUlhGTWFmSklHeUJ0Z2JRSkljQzdnM1M0ZktxTmg3dCtaL0dGdnNscklDS0N3cUNTUC8vTWtwcHYxV2xWUGo3ajRGVWdIUzZmWmsyTDZXOEFsdklXaElpUWFkMjczUGpsT3EyS3Qwb3J2SFd4T2x5K29vMkh1MTRYeFNHU2dxV2tqWkMyd2xjQXZEaEloOHRYdXFiRmRBaUFNZXMzRjhsRlRIdVhHNWZWYVZWWjM3V1lkUWNoNHRoNHVPc05VUndpTkRDU05rUGFUclp2bkZVSElWYTVwc1gwRDFFY0lobENuT1FMZFZxVlBWczN6SnFEa0lSODQrR3UzYUk0UkJoQW5HUTNhVXZadW1GV0hLVEQ1Vk90YVRFZEVCTnlFWlpvM2J2Y3VESWJROENjTzRqWkY4VEd3MTIvRmNVaHdpSkxTWnZLeG1RaTV3SjU3SlI1aThVWHVwbnIrNGhNTFVpYkltMkw2L3R3MnNXS3I2MzZJN2tQWnpjUm1jcEVHMHMwLzg3bDJpM09IR1RiS2ZOWDRnc1BSWEdJY0lXRXRESFMxamk3QVJjT0V0L1BjVkpjc2k2U0pYcDJOYzZjeThWK0V0WWQ1SWpkVXhqZjdDU0tReVJiVkpNMlI5b2UyeGRtWFNBUEhPOTlSTndKS01JRHkrSnRqMVZZRmNpZDdkM1htMXorMjltOHBvZ0lWVWpiSTIyUXpXdXlsb1BFUy9POGxVc0ZGalF5Q1dhcTgxQ3FsRU11R1I1TElFOGpFSW1neHhORWx6Y0k0ZXkzRktGSXVLbEdmelZiSllWWUVVaXJ6UzFkMzlaNVRPaDFxK1FTNE9wcFduekZvTVBLYVFYUUtPUXBYeCtPUkdIMitQQy9GaWYybWgzb2NFK0pRNVVtQXlkMk5jNWN3RVp4T3NZQ01mdUMwbzJIdXdSZjhWQXJrK0ovbHRWaXVqYnpreEUrY1hyeGRyOFRlM3J0T09zVnhwWlFrWWt4YXBXN25sbFMwOFMwekNuakhHUjNqKzFhb1l1RDRBcEhjUC94WGtRWWZDSE1LY3pIdDQzbCtPdUsyZmp2K1pXb1VxVjJvS21NUVNuRExEVi81UVZJbXlSdGsrbDFHRG1JMlJkVVhuSGdreU81VkVoNlNWRStubXlZZ1ZJVjg4TnRuY0VRbnV1eTR2bXpOamhDT1ZGcWxuTUs1VktzbTE2TVcydW54Zjc3amlQZE9HVHo4QlhPeWIrdm5MT0lTVlY1Umc3eTJDbnp6YmtrRHNKaHV4ZDN0bmN6Y3BJRWhRbzVOdFVaOE9xeVdaaXJWYklTWHk3empTb2Qzcjl5RHI0M3B3SmFoVHoyOCt0Rk0xQ240YzFKNXNiYmFNWms3Q0R4dzJzK3l0WHpPZGgwRWtJb0VzSERIL2ZobGQ2czdlVVJCT1FiOXRvcUhab3VLa1ZkWWY2RXIzRUZROWpRZWdaSFhid01jblEvMFRCOWNhYUgrR1Fza05uN2p1L0o5Wk9kaUVoZVdGb0xxWVM5NVdKM0h6bUxOODROc1hZOUlYTlpjVDUrZGtrMXl2SlR1NmZWTm9pK0lUZHVOem5SSCtTbEsvcmFwNnZtcjgza2pSbDFzYmFkTWwrVjYrSkF2THQxVStzWldGbmNWL0NmbDB6SGpkVzhGZUhJQ3Bmck5kaHg2UXpzWERvcnJUaHNnM1o0dlY0VXk2WDRqYkVRYy9KNW1TYjdXcnpOMG9hMmczUzRmSW8xTGFZUEFTekk1SVpDcEZhZGh4Y2FaN0xXM1NMODE4aytQSFBXeHRyMStJWjhrMzU1bWhZYmFrcXhSSzlOKy9wd09CeHpqa0JnZExmcW5qTk90THRESEVhYWxHTjdseHN2cFh2NkxtMEgyWHJDZk45a0VnZmhqQ2ZBV3VLZTRMNzZDbnl4Uk0zYTlmakVxRmJnNWFVejhldExheWlKQS9GdTFWaHhmT0FNOENVT3dvSjQyNlVGTFFkNXRzczY2ejlQV1k1UDFuUEkyVTdjZmFFd3Z2cStDWjJlM0p4VVhGaW93b1lhUFZaVkZFTktJMDBqM1NxM1ovVFFyaXNjd2YvcmNPSThQemxJQXQ4UDZnM3piNmtwUFUzMURiUWM1RTg5ZzkrZXJPSkFQQ2ZaeEtLVHFPUXlmTmRZeHNxMXNvbEtLc0dUbDFSaDl4ZU51S2FTbmppSWM0d1ZCK0hOd1FEZjRpQ280bTJZTXBRRjBteHhsSnBjL2ttL3QveER1eGZyV3MvZ1BFdUorLyt0S01LVnBWbXJVc09JRW9VTTM1cXB4NzdsZFZoVldVejcvWW1FZkN6K1NCU3ZEZkJhZy9vQ3BBMlR0a3oxOVpTN1dMUDNIZjg5Z0Z1WkJKZExYRnFVanhkWkdnTDJCTU5vZk9jVUFoSGhyZzIrdHJJUVA2aXZnQzR2cys0bGNZNkp4RUhZZWM2RFhmM0NFRWljcHo5ZE5mODJLaStrNUNEUGRsbm5BYmlGY1ZnNUJKdE9vbGJJOEs4RzFqZTdzY2JXdVFZOGRzbU1qTVdSekRrSXZmNHcvbmhlVU9JZzNCSnYwMm1oSkpBLzlReHV5S1Y5SG14QlJITG5FWFp5a24rckV1N2NTSDFCNW1sbHNwd2p3WjRCSDRMQ00wNVp2RTJuSmExQXpMNWduc25sdjRHVnNCaVN4ME45bEE4ZDdEakprcElDd2E3K3ZTakRWYmVwbklOd0xoREdtNE1acnhQa0ZOS21TZHRPOTdxMEF0blJaYjBSUUNWcmtXVUkwY1l2YXd0aFZHWGZ5SWlUckcvclpDUVNxUVM0Y2xvQnEzR3hnVW9xUWJHS25rREM0VERPbmJlbWRBNlNiejE0MWdVUDd3TlhTYW1NdCsyVXBCWEl6cTZCSnRaQ1lzREZham5tcU9YWVBvc2ZrY1FtRXhsMnR5NHRGdDVvMWlLZGluYmhzb2ttQWNkeTBCbkFhVitZVVd4Y1E2VnRweFRJZGxQL0FnRExXWTBxUTY3VURYL0w1VWtsZU9RaUxUOU93ckM3dFZTQU0rdDFOSmZwazI1Vk9uRkVvMUhzRmw1aVBoSEw0MjA4S2VrRThvQlFrdlBHZ3M5SFdNcnpaTHc1Q2VsdTdiTmt0cVM5VkpVSHJVeFloU2FyMU5RRmtpNGhUOUR1RHFGRDRPNFJSeFp2NDBsSktwQm1pNk1hUUVaTGhObEdJUUVNZWFORDVkTkptTkJZTlBHZUNiNzRBc1Y0MGlYa0k5bHR6UW4zU0xBMjN0WW5KSlZBaURqWVc5N0tBTDFDQ3RrRUUzWjhPa21tMURJb0dzRUZWT0toNmh5RWY3cURhQjNLcWJWbmluaGJuNUNrQXRsbmNUTGU4TTRXMCtUSmU0SUpKekVvZUR1d2x4YlRXRnhTejVRdmxXcWhUbFA2aUk1emVDTlIvS3lIdHhPYk15WlZXNSt3VlcwMzljOFRTbkpPU05mMmlaTThYbHVRRTA2aWxBcER5QnN2S3NHdkZpZmZMVTFsS0hjc3IxcDk2QTBJZDF3M0JjdmpiWDRjeVFSeU81OW5xR2RDcm5TMzZLeU01UW9panZ2blZrS2VRcXhVaG5KSEVvaEVZd0xKVWFUeE5qLytmNHo5aXlOMmp3YkF1cXlFUlJHcVV3K2t1N1gxSWkxbUNWZ2tQQnhMUHdyU3JicG5qaUhsYTZnTTVZN2xLYk1IenJEdzFwVFFZRjI4N1k5aW5FQU9Xb2N1QjZETFdsZ1U4TkpZQld2SWsrRlhzd29GS3hLTG43OEV0a0dud3BPTFpxUjFEanJkS3NJWlh3ai9heFBta2hJYTZPSnRmeFRqbmxTTDFaWFI1bll1b1ZzSkk1RzRDMUVrL1Y1KzZ2c1M1M2loc1JaNXN1VGlvSk9RanlSSEpnWFRNbEhiSC9lMDJ1M2VGVm1MaUNLMlVCUSttbnNwaE9va0o0YXkzNWdTenBGS0hKazRSemdheFFsUEVQdnRrNk9vOTBSdGY5UVlYN1BGb1Fld01LdFJVZVMwTjRSNUducERwQWtuZWVpc2k3VjFRU1RIcnNsdzlXc2dITVluV1M2ZVJwd2puVGlTT1FkSnZEdDk0ZGhXV1dzb012eG5NQUp6WVBoM1d5aUNVRTZuSGVOWVNEUXdzc2pjS0lHODJHMWJTOW9WTDZHbDRUMW5rTFpBTU1KSnZuUGF5VmdrUkJ5L1hsaUZGV1dacFdoSDdWNWtjeENVcW5NazJ5WjdiNmNUSnp3NXNXU0VMZktJQmxZYmRFOG4vbUxVazJ1enVkTXUvK1dMdHgzK21LVm5Rc0pKeWhsT0ptNmJWNEdyS3VqdjFVNXcxSjY5SXM1TWNvNWdKSW9mZDd1bW1qaGlqTlhBaGFmWGJIR1VBMWpKUzFRVU9CK000cVFuODVwS2h2aGtZcVk1eWJjcjFMaENMV0YwNHRReEIvMEVPQk1TazRESnhKRnFFcEE0eDhQZExoektyZVVpYkxJeXJvVVlGNTVnaDh1M21MZVFLUEsrazltSGxtbmlmbGVsR3RlVnF1RDErWERlYWtXbTlZenZtVzFBUVlwdmREWmdNZ2tZNjFhZGNlS0RxU3VPR0NPMWNDRUhNYm44aTNpTGlDSi9zL3ZSVko0ZjZ6SmxTcUs3OWRkQmFzbnlES1VVVnhaOXZpVGM3dzlnd0RZSXZiNkU5a2FqR1ZvbFh2dmlMSHpydzdNNDdXRS9XV2N5Q1VqRThRanBWbm1uWHJkcUxIRXROQ1BYQkdJTlJmR0d6WSsxcGN4V3hCSW51Yms4ODJYbkNTZVpwdGREUXJNczBBeU5FcjliZkJHK2R1ZzBoc0xzcGV4VUp3R1RKZVQzbkhIaXBDaU9HQ08xSUozb0w0WE1DLzFlMlBpdjBIZkJTVExwYkNXY2hLMGp5cGdrNUFubkVNWHhPZU1Fc3QzVVh3Q2dsdGVvS09JSVIvR0tRQmJGTWNsSkVrN0NOQ2RoTWdtWWNJNnBubk5NUUcxY0V4Y2M1TEw0TUg5TzhHZWJMelp4S0FUNGRCTFJPVGhERXRmRXNFQmFiZTVsZkVkRUIxOEVzZGx4T29zWXVZUVBKeEdkZzFzU21vZzkzYlljRXdqQkVvemc1ejF1VnMvMFlFTENTVEtCcnBNd25RUVVuU005Q1UxSWo5ZzlNZ0NDVzZCSWhYY2NBVHpRNVlKSElQc1FpSk5ZQjJ5WmRiYzBTdXhxbkpsV0pFUWNUQ2NCUmVlZ3hBcWlEYW5GRnl3SElMeUtaaFJwY3dYeGVLK0wwUXczbXpEcGJwV3FGQ203VzFTSGNwUE5jNGpkS2xwb2lEYklrNjdpT3hLbXZPTUk0dkVlVjZ6N0lBUzRTTnlwZHF0U1RRS0szU3JhVkVrN1hMNmNGd2poTDRNQjNIWEdDV2VJL3prU3NKeTRpd2s1UHhCdHlPcHUyZlJsazh0L0RkL0JzTUZBS0lvRGpnRHlwVUNOVWpaaExhMXNRdktCWURDRWZIVSs3VEYwWFo0Y3F3MkZrQ0tLbnkxTXY1L0RrMklvbDhlRE0zT2Frang1eTZUb1lvM2tYRENDbi9kNmNIL25FQVlGTU9QT3hFbXE4eFg0d2R4SzBUbjRvNG84ZWNybnRlVVNSejBoZk9PVUhWdlB1bUxIRHdkNUhBN09aQWc0RW9rQUVrbktJK0NTRGVYNnhKeURMVXJsN1hhUG51OG91SUkwajNlZGdkaFBrVXdTSzRCOWlVYUJCUm81cXZKa29OSURjNFdIOTZFYzl3UmpmMjRzVjhlT1lhQkxZZ2lZeWlyZ2NDUUNxVlNhOUhYSkR1a25kUHZDK05IWm9Wd3Q0Q1lvaURZa2RjM0g5Z1A0TXQvQlpKczhDVkNqa3FGV0pZdUpSU0dSeEFSRGpHWWdGTUZaZnhoZDhmM1lJNzFITGdHZXJDM01TQ1FFcFRJdjVTcGdJZzVabXVxTDU4NWJKeFFIY1k3Yk9oeWlPTmpqYitSVEZ1N2hlUndTaUFLZmVzT3hIenFFb3NDVzdpRnNuVkdRa1VoUzdTZUp4SjBqRmNtR2NuM3hiYktpT0ZpbFNEcFZCY0tFODhFbzdqemp4Q2NaYmdIMm56WmhjUDkrUkNPZk4rWkV6cEdxKzVVc0lmZUpPd0c1b29oOEJRcnJ3SW9jSVNNbmlVU2czdnNHdEFmZWdUUWFSYUNsQllwNzd3WFVha1lKK1kvRmhKd3I4cVZDTGZPVEM5QjFFdlViYjZEd25iZGo0aUJJVDU1QThFY1BJQm9NcGhSSE11Y2c3eERYVm5GSzdOZ200UnhZa1lNa25DU2RTUExhMmxCdzRPMXhmeTgxbXhGKy9PZUlKaWtXbmN3NVNKS3ZMeW5CWXcwMXJPMU1GQm1IUW5RUUZram5KUEpqeDFEOHg1ZVM1aGVTOW5ZRUgzcHduRWlTT29kRWdySlNQZkx6VmF6dFRCU1pFTkZCMkNMaEpIMyswYmtBY1E3OWptZlN6bjFJT2pzUi9QblBnTkN3eUZJVmt0WVhGeU12Ny9Qdk5iYjN1SXRjUUNHcGF6NFdIRnVDVkNSenBpa2t3NGw3MUEvTnZtWm8zMnVodFE0cmZNbENPRys5RGY3ZytMd2kxcTBxTG80NXgwUllmVUdzYit2a3BLVFFGQ1ZFQk9JUlI3SXlvKzU4SDViMm5vWXNHa1d2cGhEdGxUT2hEQVZ4NVdlZjRudW5Qb0RLNWFKMXZXZzBDbXZYV1FRWExZTDB3WWN3Y3FvLzAuMC4xMDBSd1QwZTN5czE1U2FBcmpKUUt4QyszQUhLR3p3TktONzdmK0ZRMERmYU5HbjBnRHAxc25hK1I3N1dZTFBQYmhNOWdsVjE4TjZkMzNETStOcEhHT3NYUzcvWndWcDV0aU9FZ09JbzRSMG1DZXBSczc5ejJQeFRienVLRlpKdUlZN08yN0lJN1kzNzMxRmlJL2ZpVFdQVXNrNUZRUkUzZldDSkluS0g3TlVHUkYxMGs4dis5NXFLTHNkVjhTenVGMU9zZi92L2ZmaCt4bi93MTVKcHV1eE1TZERRSkVJTmtwT1o3alZOdXQrT1dCVjFrWHgxam5HSXQvLzM2WWI3c05rUkQ5WlMyaWt6REdTNTVjOGs5SEpNWjB1eFZQdmZWUzFweGpMTUdQUHNMQVcyOEpvc3pwRk1NdUNpUU54RGxlZmYxM3FIV3g5NWlvT01kWXZKRHdYdVowQ21LWEdsUnlCOTlSQ0pXRWMyaWk3QzBFcE9NY01hUlNTTDc1VFVnV0xNaHFjVG9SZ0doRDJsQ2tIdUE3RUNGQ0V2TFhYLzh0cTg0UkRnWmo4eHlVblVNdWgvVCsreUc5Y2QyRk9aRnNGS2NUR1lab2czaXVsZTlBaE1ZOFN6Y25DYm10cHhjQnF1ZVFFM0ZzZlFTU0s4YWZpc2RsY1RxUlVWakpVK3JsT3dvaHdlVlFMbVZ4eUdTUTNuc2ZKSmRlbXZRbFFqcWZaQkxUS3pWcWxhSkE0bkRsSExRU2NpSU80aHdyMDUrbktvVHpTU1l6UkJ2U09xMUtGQWdQazRESmtHemFCTW1TSlpSZkx6b0pkeEJ0eU1VdUZyZVRnSFRFZ2ZxNWtLNWFUZnRlYkorWk9FdXRRTDFXaWVJOE9SUlNDVHloQ0FhRFlaeHkrZEF0a0lPTHNrU3YzS0JTbkFQZ3p1VUs3MHlZYnJmaU56eE9Bbzdrai9PWDRVcC9HSlZLK21lNUo1eWtWRjlDKzczRVNWNy80aXdNQmtPWXJWVkJKVTkrZjNjd2hIODZ2RGhxOStCZHF3dUg3Wk4ySVlhYmFFTkNQc3paKzQ0M0ExakZkMFRaaG5TcjJIYU9jREJJYjdScUJIZCs1eEVNR0dkblhGS0lrSzlTWlhSRWRhWjRnaUhzN2gzRUs1OE5vc005cVpiMTdmdDAxZnpWc1F5dHNVUnppTzlvc28wZ2huSW5nR2xKSVNhSmV5YW9GWExjWERNTmUxZk14cGI2OHF6Y014c2tOQkVUeU5JcEpoRHVFbkl6STNGTWN3elAyVkl0QkpFTUpvazdFOWJWVE1OZi9zOHNYSzdQL2Q3NjBwRUNBZkFCK1l6NURTazdjRGVVMnd1UG5kbXFuV2wyMjRYZmM4MUpFaGdMOHZIN0pUVzRyRmlkMWZ1eVREU3VpV0dCYkRLV0RRRTR3M2RVWE1PbGMzaWRRNHl2RlpLTlRvNXoxVW1rRWdsK3ZYZ0d2bDZWc3h0Vno4UTFjY0ZCWU5RcWovQWFFc2R3TjVUTDNEa1NkSmVOUDZvbFY1MmtRQ0hIVHhaTXg5Y3FDck42WHpZWXFZVXBJUkR1OW5PdzR4eUVydkpxSEsrdG4vRC81YXFURUg1MGNTV1dGT1ZXVFpBcEpSRHU5bk93NXh3dWxSby92SFV6UXJMa1E3dlpkSkpRaEwwdkV1SWtPNWJVb0R5RHVSMittRkFnZFZyVlI3eEZ4QkhjN2VkZ3p6azhTaFYrY3RPZEdOQVZwMzF0c3VKMFZFbTNuOFFmanVEaDR6MVl0UDhrYnYxSEozNXJPb2YzemcvQkcyTDIvSlJ5R1g0NHg4RG9HdGxrcEJZa0k3OVJadTg3L2c2QTlLdmtjZ0NoVFFKT1JLZGhPaDdhY0IvT2xVeWo5YjRMeGVsWW5FejBoTUs0NDZOdXZHZHpUL2llZW0wZTV1dlVXRktzeGdxOUZ0UHk2YS9mZXZCWUQxN3VGZndHMWdPZnJwcC9aZUkvUmdua3ByYk9XOXRzN3QvekZSbGJ6TE4wY3pKYVplM3FRc0RyWStWNlRyVVd0OS8xS1BwTHlqSjZQNXNuWFJGeC9Qc0hwM0hLUlgwbTNLaFc0QnFERHY5V3FVTzFsbHFPRVF4SGNOazdwekFra0tPNko2S3hSSFBiQzQwem4wNzg5NmkxenV0bWxPeko5VEpBM0U0Q3NpTU80aHgzM0xVdFkzR0F4Y1RkSFF6aGpvL08waElId2VRSjRza3pWbnlwNVRUdWJlK205QjZGVElxMWxZSWUrZzNFTlhDQlVRSlpiZEFOQURpYTliQllRc2lUZ0FtSWN6eTQ0VjdhM2FxSllKcTRXMXdlckRuWWdmZHM0eXZJMDZFMVNiZHNJcTR4Q1BwQXM2TnhEVnhnM0c2WmhxTDhnMWtOaVNXRVBna0lscHhqTEprNmlTTVV3WU5uWGVnTE1CL0FPQmNJbzNPSVdsNTJTWkVhMDFYQ1BGQmdvclkvVGlETFM3WDdzeFlSUytUQ0pLQW5UNFdIV0hLT3NTU2N4RVJ4cndZUnh4Mm5uZmc0UStlWmlOZjdxQ1hmTXFrRS95TFFidFpFYlgrY1FGYVVGcnhMbm1IV29tSklMa3dDRW5IOCtKdmZ4VGtXbldNc3hFbnNGSkpmVHpnYWN3NHp5NmZodm5XTyt0NlhhOG9GT2J2dWlMZjlVWXdUeUtJaU5lbFF2cGkxc0JqQTFTU2dyWWRkNTdqNzlpMzRjTTVDVnE2WGlvc29UTWI5dk5mTnFuTWtJRW43ZVMrMVJIKzJUZzFGdGphc1VPZkZlTnNmeFlRNzlqY1p5MzREUUxoamNWeE9BdmFaNFJ0aTF6bk9WTld3Y3IxVUZNb2tLRldrTHNEZ2kwVHh2cE83UWNxMlFlckoraXlOb1BiQlIrSnRmaHpKQlBJeGdCYk93OG9Rcm9xNm5lODZDNCtESGVjZ0NmbTM3dmxwVnB5RFVKRW5UYnNmWFNXVllMNkd1OFBFM2grZ2ZtQ1FRVmlKZWt1OHpZOGo2VmZPS2tQaHE1eUdsQ0ZjRGVVT2ZOYURJRXN6NUU2MWxyT0VQQmxGY21ybGUrWm1PTEZJaFdNTzZzOVBJUlZPdWFGVWJUMXBsS3NOdWoxQ08xeG5BVWN6NUtSYkZmU3hOUWxZSFJ2SzVUSWhud2dseFQ3OVBBNEZjc29WZ00xUHJja0lLQVVKeHR2NmhLUVNTQStBcEcva2czdmIzdVJrRHpsYjNhcmhvVno2YTZ2WXdCV2h0cGo5WWc0RlF2Z3p4ZUhlU0piM3A2UmdUN3l0VDBoS245dGtMSHVVZE04NUNZc21pbEFJRGRZKzFxN0hWVUtlYmVkSU1CU2kxdUFLWkZKTVYzTFh2WG03bjlwd3IxY1loNHlHNDIwOEtla0Vja3dveWZwODg5bllBajAyNE1JNXNqV1VtNHkrWUFSVXY1UzVkSkZEZzE1NEtaeUdaZllKb3ZmZUVtL2pTVW43VmRKVW85L0pha2daMHFrdloyWGJLTnZPNGMzaVVHNHEzT0VvK29QVXpKNHJnV2hrRXZ6eWtpcmt5MU5mUHhpTzRLeVhmNEZRYWR0cEJiS2hwdlFsOGdYRldsUVpZbGRyWWMxanRuV1Q5YUhjOG1yY2RzOS84ZW9jSStud1VoUElZaTM3UTZ6RkNpbWV1ZlFpWEZPWmZ1UFhnWDRud3Z5bklIM3h0cDJTdEFLcFVDa0NScTN5RDZ5RnhZRDNxMm96Zmk4M1E3bjM4Wlp6VE1RLzNkUm15Q3Z6WkxGNUU3WWc0dmpUWmJPd3VFUkw2ZlVIenRNcnljb0ZwRTJUdHAzdWRaU2UwblhWeFR1RWtLeS9QV05PUnU5amZTaTN2QnAzM1BVb3p1bUZJdzdDWVJmMWJzc1ZPblptc29rNG5sbzBBOU0xU2txdmR3VkQrQjh6TzkxYkJvVGpiVG90bEFSeVMwM3B4d0NlWlJ3V1EvYlh6a2Uza2w3VlByWVRjaUU2UjRLei9uQnM2VGtWMkJCSXZoUjRZclllaTRxcGZ5Wi9QeitFQVA5RHZNL0cyM1JhS1B2c0V3M1ROL04rWEp0RWdzMVhyQVhWcFhac0orUkNkWTZSL01WR2JhMVZuVXFHRllVSzZHU1pEUTBTY1d5Wm9VV1ZORXpyWU5IWCtOK1RibzIzWlVwUUZzaHFnODVxMUNxZnl6Z3NsamhTTlJPdnpib2s3ZXZZZGc3dmhVbEE0WXFEOEpkQkg2VkpPSWxFZ29jdktzQ2VpNHZ4cTFtRnVMNVVoZkkwaXgwVEVISDhvcllRWHlnWWRpR3Z6NGQrQ2lXRk9wd2V2RHRBZlVFakY1QTJUTm95MWRmVHl0U3VxeTUrQ2dBN0hYa0dQTlZ3QmM2bkdOSGlZaWoza2ZYZkZiUnpKTENGb3ZpOXhVdXJTTnhjdFJ6L1VhSEdDM04wZUc2MkR2ZFhhM0JWVVI0cUowamtGWkpoNTZqTEh6MlVtNjZra0M4Y3huZVBKcDJ3emhhK2VCdW1qSVR1M01KTmJaMmIyMnp1bExPUDJjQm9OV1AzbjUvRzJKNTB3am5ZRk1mZHR6K0UwMVV6V2JsZXRuaTh0Z0FMTmN5SGM4MkJNTjUxQkhEQUVjQ24zakR1ckZUanEzcFYwdGVQckpZeWtoMW56dU94VDg4eGpvY0pqU1dhQjE1b25MbU56bnRvQzZURDVWT3NhVEY5Q0dBQjNRRFo1dXZIUDhCRGJYKzk4R0VrbklQTmJoVnhqZy9yaFRIUFFZZjZmQmtlcnkyRVVzcmVza0I3S0FLZFRJcDBwN3pscTFTalRyb3lEWGx4WTJzbnBSMlBISEpzNzNManBYVmFGYTBaU3RxRDRlUUdUVFg2dSttK2p3dGVtWDhaN2wzK1ZYaWxNdFluQWJzU2s0QTVLQTdDS1c4NHR1L2NHbVN2VVJiSjA0c0Q4WnpFT2pCOGxNTS9COTM0QnYvaUFHbXpkTVdCVEJ3a3dleDl4L2NBK0ZwR2IyYVphNCszNGpzdi81YTFlUTVudm1aNHlYb081QnpwYU5RcXNHMW1BUy9MeTkxU09mN2pFeHY2Zkx3Zi9QbmFwNnZtcjgza2pSbFBwejdSTVAxV0FOUXFobkhNcS9PWFl2dlYxeUhDUWpNZ3puSEhkeWVIT0FodHJpQyszOG11azFDaDNSWEVONCtmRjRJNHV1TnROU015RnNocWcyNWdsYUdROTJROXdaN0wxK0NSbSsrR1g1SDVCQmh4amdkellDaVhMaCs1UXZoKzV4QUdzaVNTazU0UU5uY053UzZBQlZla2pZNHRCa2VIakx0WUdGNnlyTHppd0NkSEFNek4rQ0lzVTMrMkEvZTg4anRjMUUvditIZmlIQS9lTXZuRU1SSzFWSUtONWZuNFY3MHlkZ29VMnd5RkkzamQ2c2ZMVmkrOGd0anVnWk4vWHpsblVZVks0Yy8wQXJLSEgzNDQ0N3NYeUdYaEtLTDliVGJQOVJsZmhHV3NSWHE4c2V3cUZMbWRtTk5EN1ZRNWI1NFNkOS8rOEtUcFZpVWpHQjN1Y24zaUNXTkpnU0pXeElFdGpycUMrRUdYQys4TkJVRng3eGJuZk1jNDdZNnJ5Z3IveWVRYWpCd0V3eTRpM1hpNGE2Zko1Vi9QNkVKc0U0Mml3ZlF4MWg3OEM1YWVQSkkwT3hrZXlyMExIOVkzWkRsQWZwRkxnSlc2UEh4Smw0ZUYyc3pFUXZLYTFxRUEvam9ZNEtUV0ZoT01XdVd1WjViVU5GV29GSXk4akxGQU1GeThXTHErcmZNWWdJc1pYNHdEYXN6ZHVPSHQxM0hGMFE4Z0hmSHY3YWlxd1pZTjk4R3FLK0UxUHI3UnlpUzRvakFQWHl4VXhQYUs1S1VRQytsRy9kMFJRSXNqaUE5ZFFhRVdUenV4cTNIbWdxVWxHc2Joc1NJUXdyWlQ1aXQzZGcyOFJicHRyRnlRQTRxSDdERFl6a1B0OCtCOGtSNTlwWWFVeDU1TlJZZzBTdVFTbENsa1VFa0JtVVFTVzMzckNVZGhEVVhnQ0VXRmZsNTR1S2xHZi9YbStvcDMyTGdZYXdJaDNObmVmZjAraS9ORkFJS3FDaVl5WlFpdU1oU3VlN0poeG02MkxzaHFlUXNTbUZHcm5MQ0VvNGdJMTVDMng2WTR3TFpBQ0kvT3Izb0l3Q0cycnlzaWtvWkQ4YmJIS3F4MnNSSzAydHphOVcyZEp3RlVzMzV4RVpIeDlPeHFuRGwzYVltR2VuRmdpbkJTUVl3RTJsU2ozNWpyNXgySzVBUUIwdGE0RUFlNEVnaGhjMzNGbTQwbG12V0EwQWM5UkhLWUtHbGpwSzF4ZFFOT1MyeS8wRGp6bFZXR3dxMWMza05rNmtMYUZtbGpYTjZEOHhyMFA2eXYyR3BReVhuZnl5NHl1U0J0aXJRdHJ1L0RTWkkrbGc2WFQ3V214WFNBcENlYzMweGtLdEM2ZDdseFpaMVd4WGw5aEt5Y1lrTCtJWHVYRzc5c1VNbHo3Z1JkRVdGQjJoQnBTOWtRQjdMbElBazZYTDZpTlMybWZ3QXdadTJtSXBNSjA5N2x4aS9VYVZWWks2NlYxWE93eUQ5czczTGpNb05LM3ByTis0cmtQcVROa0xhVFRYRWcydzZTb01QbEsxM1RZam9rT29rSVJVeHhjV1M5c2ljdkp5bVNmeWl4U2pFbkVVbEhQT2Y0QWgvaUFGOE9rcURENWRPc2FUSDlUUnpkRWtsQ2F6d2g1NjFlS2E5bjhaSi8rTjdseHBVR2xmeDVQdU1RRVI2a1RjU0hjbmt0NXN2N1lkVjFXcFh2NWN0bTNiektVUGl3dUN4RmhMUUIwaFpJbThqV1VHNHFlTzFpamVXbXRzNnZ0OW5jdTRCeEpYZEZwZ2FCeGhMTmVxNlhqOUNCZHdjWkNYa3dUVFg2ZndIQWV4bHdrYXpUUXo1N0lZa0RRbk9RQlBIOUpHOENXTVozTENKWjRkQ3V4cGxmNFdySk9oTUU1U0FKeUlONitiTGExVWF0OGdrQS9KOFhMTUlWUWZJWms4OWFpT0tBVUIxa0pQRkNFSDhRY3JVVWtZd0lyeklVM3NEMkhuSzJFYVNEaklROHdLWWEvZFVBVHZBZGl3aHJuQ0NmcWRERmdWeHdrQVN0TnJkMDY0ays0VlZ3RktHRlVhdmN0ZVhpeWlZMmlycGxnNXdSQ09KbFR2L1VNM2p0ZGxQL1ZpRVZ6QmFoeE1sTnhySXQxMVVYdjhxMEhHZzJ5U21CSkREN2dzckhUcGx2M21keFBnQmdCdC94aUtTa2U1V2g4TkVmMWxjOHg2VEtPbC9rcEVBU05Gc2MrcnZhUDN0YUtDZGRpWXpqdFNjYXB0L0s1SHdPdnNscGdTVFlkc3A4MWM2dWdWOEFtTTkzTENJeGpqZlY2TCszdWI0aTUxZHJUd3FCSUg3Njd0WVQ1dSszMmR3L0FwRDhuR0lSTHZFMWxtaCtzdVhpaXA5bWNtQ21FSmswQWttd284czZhM2ZQNExkTkx2L05BRXI1am1lS1lEVnFsYzlkWDEzODFJYWEwdE44QjhNbWswNGdDWm90anRLNzJqL2JCdUFXY1pLUk04SUFubjJpWWZybTFRWWRMeHVhdUdiU0NpVEJqaTdydk4wOWd4dE1MdjhOQUNyNWptZVMwR2ZVS3Y5d2ZYWHhqZzAxcFIvekhReVhUSHFCSkREN2duazd1cXczN3V3YWFBS3dYSFFWMmhDM2FHbXEwZS9jVUZQNlVvVktNU1hxTGs4WmdZeGt1Nmwvd1haVC93TUExb3FIL2FTRkpOdDdOaG5MSHQxa0xEdkdkekRaWmtvS0pFR3p4VkhkYkhHczNXZHhYaHQzRmNHdlRjc1NFZUlXcXd5RnI2NDI2UGFzTnVpbTdQNmNLUzJRa1d3MzljL2JidXEvSGNBNkFEcSs0K0VKQjRBWE54bkxmclBKV0RhcGN3dXFpQUlad3hHN1I5TmlkVjErMERwMFZidmR1d0xBd2ttOEJaamtFVWNiaXZJUHJpZ3QyTCs4VlB2dW9pSTFyMFVTaElZb2tEUTBXeHo2Rjd0dGE5dHM3aHNCck9RN0hwWTQwRmlpZVduZGpKSTl1YndNSkJ1SUFxRkJzOFZSYm5MNUYzZTRmSXRNTGovNVdReWdsdSs0MG5ER3FGVitaTlFxajlScFZVZkk3NnNOdW5OOEI1VXJpQUpoeUhaVGZ3R0F5MXB0N21WdE52Y3lBS1JicHVFcEhOSTlPdGhZb2ptMHRFUnpDTUFIbTR4bFF6ekZNaWtRQmNJeVIrd2VtY1VYTEFkUVpYTDVxenRjdmtyeU80RFNkcnRIYi9HRmRBQ0s0ai81OGZ4R01lSlB4SWRXQXlQKzlBS3dreCtEU3U1b0tGS1RicEVWUUcrZFZ0Vm4xQ3A3eU84R2xlTGNvaUoxbU9kSE1LbjQvd0VBQVAvLzJTdnFwZ2wxRTdRQUFBQUFTVVZPUks1Q1lJST0iLCJtZWRpYXR5cGUiOiJpbWFnZS9wbmcifV0sImluc3RhbGwiOnsic3BlYyI6eyJjbHVzdGVyUGVybWlzc2lvbnMiOlt7InJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIiwicG9kcyIsInBvZHMvZXhlYyIsInBvZHMvbG9nIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImFwcHMiXSwicmVzb3VyY2VzIjpbImRlcGxveW1lbnRzIiwiZGFlbW9uc2V0cyIsInJlcGxpY2FzZXRzIiwic3RhdGVmdWxzZXRzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImNhY2hlLnF1YXkuaW8iXSwicmVzb3VyY2VzIjpbIm1lbWNhY2hlZHMiLCJtZW1jYWNoZWRzL3N0YXR1cyIsIm1lbWNhY2hlZHMvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRoZW50aWNhdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInRva2VucmV2aWV3cyJdLCJ2ZXJicyI6WyJjcmVhdGUiXX0seyJhcGlHcm91cHMiOlsiYXV0aG9yaXphdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInN1YmplY3RhY2Nlc3NyZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfV0sInNlcnZpY2VBY2NvdW50TmFtZSI6ImZiYy10ZXN0LW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlciJ9XSwiZGVwbG95bWVudHMiOlt7ImxhYmVsIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6Im1hbmFnZXIiLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoiZmJjLXRlc3Qtb3BlcmF0b3IiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6ImNvbnRyb2xsZXItbWFuYWdlciIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiZGVwbG95bWVudCIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJmYmMtdGVzdC1vcGVyYXRvciIsImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6ImZiYy10ZXN0LW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlciIsInNwZWMiOnsicmVwbGljYXMiOjEsInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0cmF0ZWd5Ijp7fSwidGVtcGxhdGUiOnsibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsia3ViZWN0bC5rdWJlcm5ldGVzLmlvL2RlZmF1bHQtY29udGFpbmVyIjoibWFuYWdlciJ9LCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3BlYyI6eyJhZmZpbml0eSI6eyJub2RlQWZmaW5pdHkiOnsicmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJub2RlU2VsZWN0b3JUZXJtcyI6W3sibWF0Y2hFeHByZXNzaW9ucyI6W3sia2V5Ijoia3ViZXJuZXRlcy5pby9hcmNoIiwib3BlcmF0b3IiOiJJbiIsInZhbHVlcyI6WyJhbWQ2NCIsImFybTY0IiwicHBjNjRsZSIsInMzOTB4Il19LHsia2V5Ijoia3ViZXJuZXRlcy5pby9vcyIsIm9wZXJhdG9yIjoiSW4iLCJ2YWx1ZXMiOlsibGludXgiXX1dfV19fX0sImNvbnRhaW5lcnMiOlt7ImFyZ3MiOlsiLS1zZWN1cmUtbGlzdGVuLWFkZHJlc3M9MC4wLjAuMDo4NDQzIiwiLS11cHN0cmVhbT1odHRwOi8vMTI3LjAuMC4xOjgwODAvIiwiLS1sb2d0b3N0ZGVycj10cnVlIiwiLS12PTAiXSwiaW1hZ2UiOiJnY3IuaW8va3ViZWJ1aWxkZXIva3ViZS1yYmFjLXByb3h5QHNoYTI1NjpkNDg4M2Q3YzYyMjY4M2IzMzE5YjVlNmIzYTdlZGZiZjI1OTRjMTgwNjAxMzFhOGJmNjQ1MDQ4MDVmODc1NTIyIiwibmFtZSI6Imt1YmUtcmJhYy1wcm94eSIsInBvcnRzIjpbeyJjb250YWluZXJQb3J0Ijo4NDQzLCJuYW1lIjoiaHR0cHMiLCJwcm90b2NvbCI6IlRDUCJ9XSwicmVzb3VyY2VzIjp7ImxpbWl0cyI6eyJjcHUiOiI1MDBtIiwibWVtb3J5IjoiMTI4TWkifSwicmVxdWVzdHMiOnsiY3B1IjoiNW0iLCJtZW1vcnkiOiI2NE1pIn19LCJzZWN1cml0eUNvbnRleHQiOnsiYWxsb3dQcml2aWxlZ2VFc2NhbGF0aW9uIjpmYWxzZSwiY2FwYWJpbGl0aWVzIjp7ImRyb3AiOlsiQUxMIl19fX0seyJhcmdzIjpbIi0taGVhbHRoLXByb2JlLWJpbmQtYWRkcmVzcz06Njc4OSIsIi0tbWV0cmljcy1iaW5kLWFkZHJlc3M9MTI3LjAuMC4xOjgwODAiLCItLWxlYWRlci1lbGVjdCIsIi0tbGVhZGVyLWVsZWN0aW9uLWlkPWZiYy10ZXN0LW9wZXJhdG9yIl0sImVudiI6W3sibmFtZSI6IkFOU0lCTEVfR0FUSEVSSU5HIiwidmFsdWUiOiJleHBsaWNpdCJ9XSwiaW1hZ2UiOiJxdWF5LmlvL3Jobl9hcGFsL21lbWNhY2hlZC1vcGVyYXRvckBzaGEyNTY6ZWJiZmVkZDUxNDk0NGUxYTJhMTQwZjc4NWY5MDBkNDgyZWVjYmZmZjJlM2Q2N2JmNzZmNmVlNTQ1NjlhNDliYyIsImxpdmVuZXNzUHJvYmUiOnsiaHR0cEdldCI6eyJwYXRoIjoiL2hlYWx0aHoiLCJwb3J0Ijo2Nzg5fSwiaW5pdGlhbERlbGF5U2Vjb25kcyI6MTUsInBlcmlvZFNlY29uZHMiOjIwfSwibmFtZSI6Im1hbmFnZXIiLCJyZWFkaW5lc3NQcm9iZSI6eyJodHRwR2V0Ijp7InBhdGgiOiIvcmVhZHl6IiwicG9ydCI6Njc4OX0sImluaXRpYWxEZWxheVNlY29uZHMiOjUsInBlcmlvZFNlY29uZHMiOjEwfSwicmVzb3VyY2VzIjp7ImxpbWl0cyI6eyJjcHUiOiI1MDBtIiwibWVtb3J5IjoiNzY4TWkifSwicmVxdWVzdHMiOnsiY3B1IjoiMTBtIiwibWVtb3J5IjoiMjU2TWkifX0sInNlY3VyaXR5Q29udGV4dCI6eyJhbGxvd1ByaXZpbGVnZUVzY2FsYXRpb24iOmZhbHNlLCJjYXBhYmlsaXRpZXMiOnsiZHJvcCI6WyJBTEwiXX19fV0sInNlY3VyaXR5Q29udGV4dCI6eyJydW5Bc05vblJvb3QiOnRydWV9LCJzZXJ2aWNlQWNjb3VudE5hbWUiOiJmYmMtdGVzdC1vcGVyYXRvci1jb250cm9sbGVyLW1hbmFnZXIiLCJ0ZXJtaW5hdGlvbkdyYWNlUGVyaW9kU2Vjb25kcyI6MTB9fX19XSwicGVybWlzc2lvbnMiOlt7InJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJjb25maWdtYXBzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbImNvb3JkaW5hdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImxlYXNlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giLCJjcmVhdGUiLCJ1cGRhdGUiLCJwYXRjaCIsImRlbGV0ZSJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImV2ZW50cyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJwYXRjaCJdfV0sInNlcnZpY2VBY2NvdW50TmFtZSI6ImZiYy10ZXN0LW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlciJ9XX0sInN0cmF0ZWd5IjoiZGVwbG95bWVudCJ9LCJpbnN0YWxsTW9kZXMiOlt7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJPd25OYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJTaW5nbGVOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJNdWx0aU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiQWxsTmFtZXNwYWNlcyJ9XSwia2V5d29yZHMiOlsiYWkiLCJtbCJdLCJsaW5rcyI6W3sibmFtZSI6Ik1lbWNhY2hlZCBPcGVyYXRvciIsInVybCI6Imh0dHBzOi8vZmJjLXRlc3Qtb3BlcmF0b3IuZG9tYWluIn1dLCJtYWludGFpbmVycyI6W3siZW1haWwiOiJhcGFsQHJlZGhhdC5jb20iLCJuYW1lIjoiYXZuaXNoIn1dLCJtYXR1cml0eSI6ImFscGhhIiwibWluS3ViZVZlcnNpb24iOiIxLjIwLjAiLCJwcm92aWRlciI6eyJuYW1lIjoiUmVkSGF0IiwidXJsIjoid3d3LnJlZGhhdC5jb20ifSwicmVsYXRlZEltYWdlcyI6W3siaW1hZ2UiOiJnY3IuaW8va3ViZWJ1aWxkZXIva3ViZS1yYmFjLXByb3h5QHNoYTI1NjpkNDg4M2Q3YzYyMjY4M2IzMzE5YjVlNmIzYTdlZGZiZjI1OTRjMTgwNjAxMzFhOGJmNjQ1MDQ4MDVmODc1NTIyIiwibmFtZSI6Imt1YmUtcmJhYy1wcm94eSJ9LHsiaW1hZ2UiOiJxdWF5LmlvL3Jobl9hcGFsL21lbWNhY2hlZC1vcGVyYXRvckBzaGEyNTY6ZWJiZmVkZDUxNDk0NGUxYTJhMTQwZjc4NWY5MDBkNDgyZWVjYmZmZjJlM2Q2N2JmNzZmNmVlNTQ1NjlhNDliYyIsIm5hbWUiOiJtZW1jYWNoZWQtb3BlcmF0b3IifV0sInNraXBzIjpbImppbmgtZmJjLW9wZXJhdG9yLjEuMC4wIl0sInZlcnNpb24iOiIxLjAuMSJ9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoia3ViZS1yYmFjLXByb3h5IiwiYXBwLmt1YmVybmV0ZXMuaW8vY3JlYXRlZC1ieSI6ImZiYy10ZXN0LW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJtZXRyaWNzLXJlYWRlciIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiY2x1c3RlcnJvbGUiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoiZmJjLXRlc3Qtb3BlcmF0b3IifSwibmFtZSI6ImZiYy10ZXN0LW9wZXJhdG9yLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoia3ViZS1yYmFjLXByb3h5IiwiYXBwLmt1YmVybmV0ZXMuaW8vY3JlYXRlZC1ieSI6ImZiYy10ZXN0LW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJjb250cm9sbGVyLW1hbmFnZXItbWV0cmljcy1zZXJ2aWNlIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6Imt1c3RvbWl6ZSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJzZXJ2aWNlIiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6ImZiYy10ZXN0LW9wZXJhdG9yIiwiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoiZmJjLXRlc3Qtb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc2VydmljZSJ9LCJzcGVjIjp7InBvcnRzIjpbeyJuYW1lIjoiaHR0cHMiLCJwb3J0Ijo4NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOiJodHRwcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
relatedImages:
- image: gcr.io/kubebuilder/kube-rbac-proxy@sha256:d4883d7c622683b3319b5e6b3a7edfbf2594c18060131a8bf64504805f875522
  name: kube-rbac-proxy
- image: quay.io/rhn_apal/memcached-operator@sha256:ebbfedd514944e1a2a140f785f900d482eecbfff2e3d67bf76f6ee54569a49bc
  name: memcached-operator
- image: registry.connect.stage.redhat.com/jinhli-test/jinhli-sep:1.0.1
  name: ""
schema: olm.bundle
